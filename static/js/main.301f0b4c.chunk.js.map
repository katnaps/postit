{"version":3,"sources":["containers/LoginForm.js","containers/SignUpForm.js","containers/Modal.js","components/UserLinks.js","components/Navbar.js","components/Loaders.js","containers/UserImages.js","pages/HomePage.js","containers/UserProfileImages.js","components/PreviewImage.js","containers/UploadImages.js","containers/UploadModal.js","pages/UserProfilePage.js","App.js","serviceWorker.js","index.js"],"names":["LogForm","styled","div","Login","h1","FormTitle","p","InputBox","input","LogIn","button","Footer","closeModal","openSignUp","setLogin","setModal","useState","username","setUsername","password","setPassword","onChange","e","target","value","style","fontWeight","onClick","axios","post","then","response","localStorage","setItem","data","auth_token","disabled","background","openLogin","email","setEmail","passConfirm","setPassConfirm","LogBtn","span","modalStyle","position","left","modal","loginForm","setLoginForm","close","renderModal","BtnLogout","Profile","h2","handleLogout","textDecoration","to","NavContainer","NavHeader","LoginBar","NavTitle","login","UserLinks","Modal","Loading","Loaders","width","height","color","xmlns","xmlnsXlink","margin","display","shapeRendering","viewBox","preserveAspectRatio","cx","cy","r","strokeWidth","stroke","strokeDasharray","fill","strokeLinecap","transform","attributeName","type","repeatCount","dur","keyTimes","values","ImageBox","userId","images","setImages","useEffect","get","map","image","key","id","src","url","placeholderColor","MainContainer","ContainerBox","UserTitle","Avatar","img","isLoading","setIsLoading","users","updateUsers","user","profileImage","alt","UserImages","ImageStyle","Container","userImages","PreviewBox","previewImage","message","setMessage","InputContainer","ButtonContainer","CloseBtn","CloseModal","setPreviewImage","setUserImages","imageFile","setImageFile","fontSize","onSubmit","preventDefault","userToken","getItem","formData","FormData","append","headers","Authorization","success","catch","error","console","log","URL","createObjectURL","files","PreviewImage","Label","label","uploadModal","setUploadModal","UploadImages","marginTop","UserContainer","Box","UserImage","UserName","useParams","setUser","profile_picture","UploadModal","renderUpload","UserProfileImages","App","history","useHistory","Navbar","removeItem","push","exact","path","render","HomePage","UserProfilePage","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.301f0b4c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport styled from 'styled-components';\n\n\nconst LogForm = styled.div`\n    margin-top: 50px;\n    background-color: white;\n    width: 500px;\n    height: 500px;\n    border-radius: 20px;\n    position: absolute;\n`;\n\nconst Login = styled.h1`\n    font-size: 1.5rem; \n    font-family: Arial;\n    margin-left: 20px;\n`;\n\nconst FormTitle = styled.p`\n    margin-left: 20px;\n    font-size: 1.5rem;\n    font-weight: lighter;\n    margin: 20px;\n    margin-bottom: 20px;\n`;\nconst InputBox = styled.input`\n    margin-bottom: 15px;\n    border-radius: 5px;\n    height: 25px;\n    width: 90%;\n    margin-left: 20px;\n    padding: 5px;\n    font-size: 1rem;\n    border: 1px solid grey;\n        &:focus {\n            outline: none;\n        }\n`;\n\nconst LogIn = styled.button`\n    margin: 10px;\n    background-color: #007BFF;\n    border-radius: 5px;\n    width: 20%;\n    height: 50px;\n    border: none;\n    font-size: 1.2rem;\n    color: white;\n\n    &:focus{\n        outline: none;\n    }\n\n    &:active {\n        box-shadow: 0 0 12px 5px rgba(2, 101, 207,0.24)\n    }\n\n    &:hover {\n        background-color: #0265cf;\n    }\n`;\n\nconst Footer = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    margin: 20px;\n`;\n\n\n\nexport default ({ closeModal, openSignUp, setLogin, setModal}) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('')\n\n\n    const handleUsername = e => {\n        setUsername(e.target.value)\n    }\n\n    const handlePassword = e => {\n        setPassword(e.target.value)\n    }\n\n    const handleSubmit = e => {\n        axios.post('https://insta.nextacademy.com/api/v1/login', {\n            username,\n            password\n        })\n        .then((response) => {\n           // console.log(response)\n            localStorage.setItem('token', response.data.auth_token)\n            setLogin(response.data.auth_token)\n            setModal(false)\n        })\n    }\n\n    return (\n        <LogForm>\n                <Login>\n                    Login\n                </Login>\n                <hr></hr>\n               \n                <FormTitle>Username</FormTitle>\n                <InputBox onChange={handleUsername} value={username}></InputBox>\n                <FormTitle>Password</FormTitle>\n                <InputBox onChange={handlePassword} value={password}></InputBox>\n\n                <FormTitle style={{ fontWeight: \"lighter\" }}>New member?  <span onClick={openSignUp}>Sign up here.</span></FormTitle>\n                <hr></hr>\n                <Footer>\n                    <LogIn onClick={handleSubmit} disabled={!username || !password}>Log In</LogIn>\n                    <LogIn style={{ background: \"grey\" }} onClick={closeModal}>Cancel</LogIn>\n                </Footer>\n          \n        </LogForm>\n\n    )\n}","import React, {useState} from 'react';\nimport axios from 'axios';\n\nimport styled from 'styled-components';\n\nconst LogForm = styled.div`\n    margin-top: 50px;\n    background-color: white;\n    width: 500px;\n    height: 725px;\n    border-radius: 20px;\n    position: absolute;\n`;\n\nconst Login = styled.h1`\n    font-size: 1.5rem; \n    font-family: Arial;\n    margin-left: 20px;\n`;\n\nconst FormTitle = styled.p`\n    margin-left: 20px;\n    font-size: 1.5rem;\n    font-weight: lighter;\n    margin: 20px;\n`;\nconst InputBox = styled.input`\n    margin-bottom: 15px;\n    border-radius: 5px;\n    height: 25px;\n    width: 90%;\n    margin-left: 20px;\n    padding: 5px;\n    font-size: 1rem;\n    border: 1px solid grey;\n        &:focus {\n            outline: none;\n        }\n`;\n\nconst LogIn = styled.button`\n    margin: 10px;\n    background-color: #007BFF;\n    border-radius: 5px;\n    width: 20%;\n    height: 50px;\n    border: none;\n    font-size: 1.2rem;\n    color: white;\n\n    &:focus{\n        outline: none;\n    }\n\n    &:active {\n        box-shadow: 0 0 12px 5px rgba(2, 101, 207,0.24)\n    }\n\n    &:hover {\n        background-color: #0265cf;\n    }\n    \n    &:disabled {\n        background-color: grey;\n    }\n`;\n\nconst Footer = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    margin: 20px;\n`;\n\n\n\nexport default ({closeModal, openLogin}) => {\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [passConfirm, setPassConfirm] = useState('');\n\n    const handleUsername = e => {\n        setUsername(e.target.value)\n    }\n\n    const handlePassword = e => {\n        setPassword(e.target.value)\n    }\n    const handleEmail = e => {\n        setEmail(e.target.value)\n    }\n\n    const handlePassConfirm = e => {\n        setPassConfirm(e.target.value)\n    }\n\n    const handleSubmit = e => {\n        axios.post('https://insta.nextacademy.com/api/v1/users/', {\n            username,\n            email,\n            password\n        })\n        .then((response) => {\n           localStorage.setItem('token', response.data.auth_token)\n        //    console.log(response)\n           closeModal();\n\n        })\n    }\n\n\n    return (\n        <LogForm>\n                <Login>\n                    Sign Up\n                </Login>\n                <hr></hr>\n                \n                    <FormTitle>Username</FormTitle>\n                    <InputBox onChange={handleUsername} value={username}></InputBox>\n                    <FormTitle>Email</FormTitle>\n                    <InputBox onChange={handleEmail} value={email}></InputBox>\n                    <FormTitle >Password</FormTitle>\n                    <InputBox onChange={handlePassword} value={password}></InputBox>\n                    <FormTitle>Confirm Password</FormTitle>\n                    <InputBox onChange={handlePassConfirm} value={passConfirm}></InputBox>\n\n                    <FormTitle style={{ fontWeight: \"lighter\" }}>New member?  <span onClick={openLogin}>Login In here.</span></FormTitle>\n                    <hr></hr>\n                    <Footer>\n                        <LogIn onClick={handleSubmit} disabled={!username || !password || !email || (password !== passConfirm)}>Sign Up</LogIn>\n                        <LogIn style={{ background: \"grey\" }} onClick={closeModal}>Cancel</LogIn>\n                    </Footer>\n                \n            \n        </LogForm>\n\n    )\n}","import React, { useState } from 'react';\nimport Login from './LoginForm';\nimport SignUp from './SignUpForm';\nimport styled from 'styled-components';\n\nconst LogBtn = styled.span`\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    font-size: 1rem;\n    color: white;\n\n    &:hover {\n        color: #487ed4;\n        cursor: pointer;\n    }\n    `;\n\nconst modalStyle = {\n    position: \"absolute\",\n    left: \"35%\"\n}\n\n\nexport default ({ setLogin }) => {\n    const [modal, setModal] = useState(false);\n    const [loginForm, setLoginForm] = useState(true)\n\n    // const open = () => {\n    //     setModal(true)\n    // }\n\n    const close = () => {\n        setModal(false)\n    }\n\n    const openLogin = () => {\n        setModal(true)\n        setLoginForm(true)\n    }\n\n    const openSignUp = () => {\n        setModal(true)\n        setLoginForm(false)\n    }\n\n    const renderForm = () => {\n        if (loginForm) {\n            return <Login setLogin={setLogin} setModal={setModal} closeModal={close} openSignUp={openSignUp} />\n        } else {\n            return <SignUp setLogin={setLogin} setModal={setModal} closeModal={close} openLogin={openLogin} />\n        }\n    }\n\n    const renderModal = () => {\n        if (modal) {\n            return (\n                <>\n                    <div style={modalStyle}>\n                        {renderForm()}\n                    </div>\n                </>\n            )\n        }\n    }\n\n\n\n    return (\n        <>\n            {renderModal()}\n            <LogBtn onClick={openLogin}>Sign In</LogBtn>\n            <LogBtn onClick={openSignUp}>Sign Up</LogBtn>\n        </>\n    )\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from \"react-router-dom\";\n\nconst BtnLogout = styled.button`\n    fontFamily: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    height: 30px;\n    width: 100px;\n    background-color: #4287F5;\n    border: none;\n    color: white;\n    fontSize: 1rem;\n\n    &:hover {\n        background-color: #91bcff;\n        color: #20232A;\n        cursor: pointer;\n        font-weight: bold;\n    }\n`;\n\n// const UploadFile = styled.h2`\n//     font-size: 1rem;\n//     font-weight: 400;\n//     color: white;\n\n//     &:hover {\n//         color: #91bcff;\n//         cursor: pointer;\n//         font-weight: bold;\n//     }\n// `;\n\nconst Profile = styled.h2`\n    margin: 30px;\n    color: white;\n    text-decoration: none;\n    font-size: 1rem;\n    font-weight: 400;\n\n    &:hover {\n\n        font-weight: bold;\n    }\n\n`;\n\nexport default ({ handleLogout }) => {\n\n   \n    return (\n        <>\n            <Link style={{ textDecoration: \"none\" }} to=\"/users/me\"><Profile>My Profile</Profile></Link>\n            \n            <BtnLogout onClick={handleLogout}>Logout</BtnLogout>\n        </>\n    )\n\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Modal from '../containers/Modal';\nimport styled from 'styled-components';\nimport UserLinks from './UserLinks';\n\n\nconst NavContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #20232A;\n    \n`;\n\nconst NavHeader = styled.div`\n    display: flex;\n    width: 100%;\n    align-items: center;\n`;\n\n\nconst LoginBar = styled.div`\ndisplay: flex;\nmargin-right: 30px;\nwidth: 25vw;\njustify-content: space-around;\nalign-items: center;\n\n`;\n\nconst NavTitle = styled.h2`\n    display: inlineBlock;\n    margin-left: 30px;\n    font-size: 1.2rem;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    color: white;\n    text-decoration: none;\n    fontWeight: bold;\n`;\n\n\n\n\nexport default ({login, setLogin, handleLogout}) => {\n   \n    \n    return (\n        <>\n            <NavContainer>\n                <NavHeader>\n                    <Link style={{textDecoration: \"none\"}} to=\"/\"><NavTitle>Home Page</NavTitle></Link>\n                </NavHeader>\n                <LoginBar>\n                    {\n                        login ? <UserLinks handleLogout={handleLogout} login={login} /> : <Modal setLogin={setLogin} />\n                    }\n                </LoginBar>\n            </NavContainer>\n\n        </>\n    )\n\n}","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Loading = styled.div`\n    transform: translateY(100%);\n`;\n\nconst Loaders = ({ width, height, color }) => {\n    return (\n        <Loading>\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                style={{\n                    margin: \"auto\",\n                    background: \"transparent\",\n                    display: \"block\",\n                    shapeRendering: \"auto\"\n                }}\n                width={width}\n                height={height}\n                viewBox=\"0 0 100 100\"\n                preserveAspectRatio=\"xMidYMid\"\n            >\n                <circle\n                    cx=\"50\"\n                    cy=\"50\"\n                    r=\"32\"\n                    strokeWidth=\"8\"\n                    stroke={color}\n                    strokeDasharray=\"50.26548245743669 50.26548245743669\"\n                    fill=\"none\"\n                    strokeLinecap=\"round\"\n                    transform=\"rotate(182.103 50 50)\"\n                >\n                    <animateTransform\n                        attributeName=\"transform\"\n                        type=\"rotate\"\n                        repeatCount=\"indefinite\"\n                        dur=\"1s\"\n                        keyTimes=\"0;1\"\n                        values=\"0 50 50;360 50 50\"\n                    ></animateTransform>\n                </circle>\n            </svg>\n        </Loading>\n    );\n};\n\nexport default Loaders;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport Image from 'react-graceful-image';\n\nimport styled from 'styled-components';\n\n\nconst ImageBox = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justifiy-content: center;\n    margin: 50px;\n`;\n\n\nexport default ({ userId, width, height }) => {\n    const [images, setImages] = useState([]);\n\n    useEffect(() => {\n        axios.get(`https://insta.nextacademy.com/api/v2/images?userId=${userId}`)\n            .then((response) => {\n               // console.log(response.data)\n                setImages(response.data)\n            });\n\n    }, [userId])\n\n    return (\n        <>\n            <ImageBox>\n                {\n                    images.map(image => (\n                        <Image key={image.id}\n                            src={image.url}\n                            width={width}\n                            height={height}\n                            placeholderColor='#616a80' />\n                    ))\n                }\n            </ImageBox>\n        </>\n    )\n}\n\n","import React, { useState, useEffect } from 'react';\n\nimport axios from 'axios';\nimport '../App.css';\n\nimport { Link } from \"react-router-dom\";\n\n\nimport Loaders from '../components/Loaders';\n\nimport UserImages from '../containers/UserImages';\n\nimport styled from 'styled-components';\n\nconst MainContainer = styled.div`\n    display: flex;\n    background-color: #3e4452;\n    width: 100%;\n    padding-bottom: 30px;\n`;\n\nconst ContainerBox = styled.div`\n    display: block;\n    flex-direction: column;\n    align-items: center;\n    padding: 25px;\n    margin-left: 20px;\n`;\n\nconst UserTitle = styled.h1`\n    display: block;\n    font-size: 2rem;\n    color: white;\n   \n`;\n\nconst Avatar = styled.img`\n    border-radius: 50%;\n    width: 300px;\n    height: 300px;\n    border: 5px solid white;\n  \n`;\n\nconst Profile = styled.div`\n    display: block;\n    padding: 10px;\n    background-color: #4287f5;\n    border-radius: 10px;\n    margin-top: 30px;\n    text-align: center;\n    color: #eee;\n`;\n\n\nexport default ({isLoading, setIsLoading}) => {\n  const [users, updateUsers] = useState([]);\n  \n\n  useEffect(() => {\n    axios.get(\"https://insta.nextacademy.com/api/v1/users/\")\n      .then((response) => {\n       // console.log(response)\n        updateUsers(response.data)\n        setIsLoading(false)\n      })\n  }, [setIsLoading])\n\n  if (isLoading) {\n    return <Loaders width=\"300px\" height=\"300px\" color=\"#4287f5\" />\n  }\n\n  return (\n    <div>\n      {\n        users.map(user => (\n          <MainContainer key={user.id}>\n            <ContainerBox>\n              <UserTitle>{user.username}</UserTitle>\n              <Avatar\n                src={user.profileImage}\n                alt=\"My awesome image\"\n                placeholderColor=\"#bef\"\n              />\n              <Link to={`/users/${user.id}`} style={{ textDecoration: \"none\" }}>\n                <Profile>\n                  View Profile\n                    </Profile>\n              </Link>\n            </ContainerBox>\n            <UserImages userId={user.id} width=\"300\" height=\"200\" />\n          </MainContainer>\n        ))\n      }\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport Image from 'react-graceful-image';\n\nimport styled from 'styled-components';\n\n\nconst ImageBox = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justifiy-content: center;\n    align-items: center\n    margin: 50px;\n    margin-left: 100px;\n    margin-right: 100px;\n`;\n\nconst ImageStyle = styled.div`\n    padding-bottom: 50px;\n    border: 3px solid white;\n    border-radius: 10px;\n\n`;\n\nconst Container = styled.div`\n    margin: 50px;\n`;\n\nexport default ({ userId, width, height, userImages }) => {\n    const [images, setImages] = useState([]);\n\n    useEffect(() => {\n        axios.get(`https://insta.nextacademy.com/api/v2/images?userId=${userId}`)\n            .then((response) => {\n                // console.log(response.data)\n                setImages(response.data)\n            });\n\n    }, [userId, userImages])\n\n    return (\n        <>\n            <ImageBox>\n                {\n                    images.map(image => (\n                        <Container key={image.id}>\n                        <ImageStyle>\n                            <Image key={image.id}\n                                src={image.url}\n                                width={width}\n                                height={height}\n                                placeholderColor='#616a80' />\n                        </ImageStyle>\n                        </Container>\n                    ))\n                }\n            </ImageBox>\n        </>\n    )\n}\n\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ImageBox = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 85%;\n    height: 85%;\n    margin-bottom: 30px;\n`;\n\nconst PreviewBox = styled.div`\n    width: 85%;\n    height: 85%;\n    background-color: #8b8c8f;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    font-size: 2.5rem;\n    margin-bottom: 30px;\n`;\n\nexport default ({previewImage, setMessage, message}) => {\n    \n\n    const renderImageBox = () => {\n        if (previewImage) {\n            return (\n                <>\n                <ImageBox>\n                <img \n                src={previewImage}\n                width=\"85%\"\n                height=\"85%\" alt=\"uploadedImage\" />\n                </ImageBox>\n                </>\n            )\n        } else {\n            return (\n                <>\n                <PreviewBox>{message ? message : 'Live Preview'}</PreviewBox>\n                </>\n            )\n        }\n    }\n\n\n    return (\n\n        <>\n        {renderImageBox()}\n        </>\n    )\n}","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport PreviewImage from '../components/PreviewImage';\nimport axios from 'axios';\n\nconst InputContainer = styled.div`\n    position: absolute;\n    border-radius: 10px;\n    background-color: #69748c;\n    width: 50vw;\n    height: 85vh;\n    top: 10vh;\n    left: 25vw;\n    z-index: 1;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: center;\n`;\n\nconst ButtonContainer = styled.div`\n    margin: 10px;\n`;\n\nconst CloseBtn = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    width: 100%;\n`;\n\n\nconst CloseModal = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n`;\n\n\nexport default ({ setMessage, message, setPreviewImage, previewImage, closeModal, setUserImages}) => {\n    const [imageFile, setImageFile] = useState(null)\n\n    const uploadImages = e => {\n        e.preventDefault();\n\n        let userToken = localStorage.getItem('token');\n\n        let formData = new FormData();\n\n        formData.append('image', imageFile)\n\n        axios.post('https://insta.nextacademy.com/api/v1/images/', formData, {\n            headers: {\n                Authorization: `Bearer ${userToken}`\n            }\n        })\n            .then(response => {\n                if (response.data.success) {\n                    setMessage('Image Upload Successfully')\n                    setPreviewImage(null)\n                    setImageFile(null)\n                   // console.log(response.data)\n                    setUserImages(true)\n                }\n            })\n            .catch(error => {\n                console.log(error.response)\n            })\n            setUserImages(false)\n    }\n\n\n    const inputOnChange = (e) => {\n        setPreviewImage(URL.createObjectURL(e.target.files[0]))\n        setImageFile(e.target.files[0]);\n    }\n\n\n    return (\n        <>\n\n            <InputContainer>\n                {\n                    message ?\n                        <>\n                            <CloseModal>\n                                <button onClick={closeModal} style={{ fontSize: \"2rem\", margin: \"30px\" }}>Close</button>\n                            </CloseModal>\n                        </>\n                        :\n                        <>\n                            <CloseBtn>\n                                <button onClick={closeModal} style={{ fontSize: \"1.2rem\", margin: \"30px\" }}>X</button>\n                            </CloseBtn>\n                            <ButtonContainer>\n                                <form onSubmit={uploadImages}>\n                                    <input onChange={inputOnChange} style={{ fontSize: \"1.2rem\", color: \"white\" }} type=\"file\" />\n                                    <button style={{ fontSize: \"1.2rem\"}} type=\"submit\">Upload</button>\n\n                                </form>\n                            </ButtonContainer>\n                        </>\n                }\n\n                <PreviewImage previewImage={previewImage} setMessage={setMessage} message={message} />\n            </InputContainer>\n        </>\n    )\n}\n\n\n\n","import React, { useState } from 'react';\nimport UploadImages from '../containers/UploadImages';\nimport styled from 'styled-components';\n\nconst ButtonContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n`;\n\nconst Label = styled.label`\n    color: white;\n    font-size: 1.5rem;\n    font-weight: bold;\n\n`;\n\n\nexport default ({ previewImage, setPreviewImage, setMessage, message, setUserImages}) => {\n    const [uploadModal, setUploadModal] = useState(false)\n\n    const closeModal = () => {\n        setUploadModal(false)\n    }\n\n    const openModal = () => {\n        setUploadModal(true)\n\n    }\n\n\n    const renderModal = () => {\n        if (uploadModal) {\n            return <UploadImages setUserImages={setUserImages} setPreviewImage={setPreviewImage} previewImage={previewImage} closeModal={closeModal} setMessage={setMessage} message={message} />\n        }\n    }\n\n    return (\n        <>\n            {renderModal()}\n            <ButtonContainer>\n                <Label>Upload Images</Label>\n                <button onClick={openModal} style={{ fontSize: \"1.2rem\", marginTop: \"10px\" }}>Upload</button>\n            </ButtonContainer>\n        </>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport { useParams, Redirect } from \"react-router-dom\";\nimport axios from 'axios';\n\nimport UserProfileImages from '../containers/UserProfileImages';\nimport UploadModal from '../containers/UploadModal';\n\nimport styled from 'styled-components';\n\nconst UserContainer = styled.div`\n    display: flex;\n   \n`;\n\nconst Box = styled.div`\n    display: flex;\n    width: 100vw;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n`;\n\nconst UserImage = styled.img`\n    width: 250px;\n    height: 250px;\n    border: 3px solid white;\n    margin-top: 30px;\n    border-radius: 50%;\n`;\n\nconst UserName = styled.h2`\n    padding: 20px;\n    font-weight: 400;\n    color: white;\n`;\n\n\nexport default ({ login }) => {\n    const { id } = useParams();\n    if (id === \"me\" && !localStorage.getItem('token')) {\n        return <Redirect to=\"/\" />\n    }\n    const [user, setUser] = useState(null);\n\n    const [previewImage, setPreviewImage] = useState(null)\n    const [message, setMessage] = useState('');\n    const [userImages, setUserImages] = useState(false)\n\n    \n\n    useEffect(() => {\n        if (id === \"me\") {\n            axios.get(\"https://insta.nextacademy.com/api/v1/users/me\", {\n                headers: {\n                    Authorization: \"Bearer \" + localStorage.getItem('token')\n                }\n            })\n                .then((response) => {\n                    setUser({ ...response.data, profileImage: response.data.profile_picture })\n                    //console.log(response.data)\n                })\n        } else {\n            axios.get(`https://insta.nextacademy.com/api/v1/users/${id}`)\n                .then((response) => {\n                    setUser(response.data)\n                });\n        }\n    }, [id])\n    \n\n    const renderUpload = () => {\n        if (login && id === \"me\") {\n            return (\n                <>\n                    <UploadModal previewImage={previewImage} setPreviewImage={setPreviewImage} setMessage={setMessage} message={message} setUserImages={setUserImages} />\n                </>\n            )\n        }\n    }\n\n    \n    return (\n        <div >\n            { user ?\n                <>\n                    <UserContainer>\n                        <Box>\n                            <UserImage src={user.profileImage} alt=\"profileImage\" />\n                            <UserName>@{user.username}</UserName>\n                            {renderUpload()}\n                        </Box>\n                    </UserContainer>\n                    <UserProfileImages userId={user.id} width=\"450\" height=\"350\" userImages={userImages} />\n                </>\n                : null\n            }\n        </div>\n    )\n}\n","import React, {useState} from 'react';\n\nimport './App.css';\n\nimport { Route, Switch, useHistory } from \"react-router-dom\";\n\nimport Navbar from './components/Navbar';\n\nimport HomePage from './pages/HomePage';\n\nimport UserProfilePage from './pages/UserProfilePage';\n\n\nfunction App() {\n  const [login, setLogin] = useState(localStorage.getItem('token'))\n  const [isLoading, setIsLoading] = useState(true)\n\n  let history = useHistory();\n\n  const handleLogout = () => {\n      localStorage.removeItem('token')\n      setLogin(false)\n      history.push('/')\n  }\n\n  return (\n    <div>\n      \n      <Navbar setLogin={setLogin} login={login} handleLogout={handleLogout}/>\n\n      <Switch>\n        <Route exact path=\"/\" render={() => <HomePage isLoading={isLoading} setIsLoading={setIsLoading} />} />\n        <Route path=\"/users/:id\" render={() => <UserProfilePage login={login} />} />\n      </Switch>\n\n    </div>\n  )\n\n}\n\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}